{"version":3,"sources":["App.tsx","assets/closed.svg","assets/flag.svg","assets/mine.svg","assets/mine_red.svg","assets/mine_wrong.svg","assets/face_unpressed.svg","assets/face_pressed.svg","assets/face_lose.svg","assets/face_win.svg","reportWebVitals.ts","index.tsx"],"names":["CELL_STATE","App","props","topCanvasRef","canvasRef","cellBgImg","flagBgImg","mineBgImg","mineRedBgImg","mineWrongBgImg","faceUnpressedBgImg","facePressedBgImg","faceLoseBgImg","faceWinBgImg","lines","rows","bombs","cellLen","canvasWidth","canvasHeight","topCanvasHeight","cells","cellStates","bomb","win","flags","beginTime","finishedAt","resetting","topCanvas","topCtx","canvas","ctx","state","level","React","createRef","Image","initBombs","i","this","line","lineState","j","push","HIDE","nums","bombIndexs","Set","size","add","Math","floor","random","Array","from","bombIndex","x","y","setCellValue","current","getContext","afterLoad","img","Promise","resolve","onload","all","then","drawTop","draw","src","cellBg","flagBg","mineBg","mineRedBg","mineWrongBg","faceUnpressedBg","facePressedBg","faceLoseBg","faceWinBg","topStateFn","Date","now","window","requestAnimationFrame","bind","addEventListener","event","rect","getBoundingClientRect","clientX","left","clientY","top","faceLen","faceX","faceY","reset","preventDefault","tryWin","FLAG","getCellIndexFromEvent","showCell","SHOW","clearRect","drawImage","font","fillStyle","textBaseline","leftBombs","leftText","String","padStart","fillText","seconds","rightText","rightTextInfo","measureText","width","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke","text","textInfo","num","forEach","showQueue","length","shift","ii","jj","setState","className","onClick","setLevel","style","marginRight","cursor","undefined","display","padding","paddingBottom","background","ref","border","borderRightColor","borderBottomColor","height","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d6e572d.chunk.js","sourcesContent":["import React from 'react';\nimport cellBg from './assets/closed.svg';\nimport flagBg from './assets/flag.svg';\nimport mineBg from './assets/mine.svg';\nimport mineRedBg from './assets/mine_red.svg';\nimport mineWrongBg from './assets/mine_wrong.svg';\nimport faceUnpressedBg from './assets/face_unpressed.svg';\nimport facePressedBg from './assets/face_pressed.svg';\nimport faceLoseBg from './assets/face_lose.svg';\nimport faceWinBg from './assets/face_win.svg';\nimport './App.css';\n\nenum CELL_STATE {\n  HIDE,\n  SHOW,\n  FLAG\n}\n\ninterface IState {\n  level: 1 | 2 | 3;\n}\n\nclass App extends React.Component<any, IState> {\n  private topCanvasRef: React.RefObject<HTMLCanvasElement>;\n  private canvasRef: React.RefObject<HTMLCanvasElement>;\n  private cellBgImg: HTMLImageElement;\n  private flagBgImg: HTMLImageElement;\n  private mineBgImg: HTMLImageElement;\n  private mineRedBgImg: HTMLImageElement;\n  private mineWrongBgImg: HTMLImageElement;\n  private faceUnpressedBgImg: HTMLImageElement;\n  private facePressedBgImg: HTMLImageElement;\n  private faceLoseBgImg: HTMLImageElement;\n  private faceWinBgImg: HTMLImageElement;\n\n  private lines = 9;\n  private rows = 9;\n  private bombs = 10;\n  private cellLen = 30;\n  private canvasWidth = this.cellLen * this.rows;\n  private canvasHeight = this.cellLen * this.lines;\n  private topCanvasHeight = this.cellLen * 2;\n\n  // @ts-ignore\n  private cells: number[][];\n  // @ts-ignore\n  private cellStates: CELL_STATE[][];\n  private bomb = false;\n  private win = false;\n\n  private flags = 0;\n  private beginTime = 0;\n  private finishedAt = 0;\n  private resetting = 0;\n\n  // @ts-ignore\n  private topCanvas: HTMLCanvasElement;\n  // @ts-ignore\n  private topCtx: CanvasRenderingContext2D;\n  // @ts-ignore\n  private canvas: HTMLCanvasElement;\n  // @ts-ignore\n  private ctx: CanvasRenderingContext2D;\n\n  state: IState = { level: 1 };\n\n  constructor(props: any) {\n    super(props);\n\n    this.topCanvasRef = React.createRef<HTMLCanvasElement>();\n    this.canvasRef = React.createRef<HTMLCanvasElement>();\n    this.cellBgImg = new Image();\n    this.flagBgImg = new Image();\n    this.mineBgImg = new Image();\n    this.mineRedBgImg = new Image();\n    this.mineWrongBgImg = new Image();\n    this.faceUnpressedBgImg = new Image();\n    this.facePressedBgImg = new Image();\n    this.faceLoseBgImg = new Image();\n    this.faceWinBgImg = new Image();\n\n    this.initBombs();\n  }\n\n  initBombs() {\n    const cells: number[][] = [];\n    const cellStates: CELL_STATE[][] = [];\n    for (let i = 0; i < this.lines; i++) {\n      const line = [];\n      const lineState = [];\n      for (let j = 0; j < this.rows; j++) {\n        line.push(0);\n        lineState.push(CELL_STATE.HIDE);\n      }\n      cells.push(line);\n      cellStates.push(lineState);\n    }\n    this.cells = cells;\n    this.cellStates = cellStates;\n\n    // 初始化炸弹位置\n    const nums = this.lines * this.rows;\n    const bombIndexs = new Set<number>();\n    while (bombIndexs.size < this.bombs) {\n      bombIndexs.add(Math.floor(Math.random() * nums));\n    }\n    for (const bombIndex of Array.from(bombIndexs)) {\n      const x = Math.floor(bombIndex / this.rows);\n      const y = bombIndex % this.rows;\n      cells[x][y] = -1;\n    }\n\n    // 计算每个 cell 周围炸弹数量\n    for (let i = 0; i < this.lines; i++) {\n      for (let j = 0; j < this.rows; j++) {\n        this.setCellValue(i, j);\n      }\n    }\n\n    // console.log(this.cells);\n    // console.log(this.cellStates);\n  }\n\n  componentDidMount() {\n    const topCanvas = this.topCanvas = this.topCanvasRef.current as HTMLCanvasElement;\n    this.topCtx = topCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const canvas = this.canvas = this.canvasRef.current as HTMLCanvasElement;\n    this.ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const afterLoad = (img: HTMLImageElement) => {\n      return new Promise(resolve => {\n        img.onload = resolve;\n      });\n    };\n    Promise.all([\n      afterLoad(this.cellBgImg),\n      afterLoad(this.flagBgImg),\n      afterLoad(this.mineBgImg),\n      afterLoad(this.mineRedBgImg),\n      afterLoad(this.mineWrongBgImg),\n      afterLoad(this.faceUnpressedBgImg),\n      afterLoad(this.facePressedBgImg),\n      afterLoad(this.faceLoseBgImg),\n      afterLoad(this.faceWinBgImg),\n    ]).then(() => {\n      this.drawTop();\n      this.draw();\n    })\n    this.cellBgImg.src = cellBg;\n    this.flagBgImg.src = flagBg;\n    this.mineBgImg.src = mineBg;\n    this.mineRedBgImg.src = mineRedBg;\n    this.mineWrongBgImg.src = mineWrongBg;\n    this.faceUnpressedBgImg.src = faceUnpressedBg;\n    this.facePressedBgImg.src = facePressedBg;\n    this.faceLoseBgImg.src = faceLoseBg;\n    this.faceWinBgImg.src = faceWinBg;\n\n    const topStateFn = () => {\n      if (this.beginTime === 0) {\n        this.beginTime = Date.now();\n        window.requestAnimationFrame(this.drawTop.bind(this));\n      }\n    };\n\n    topCanvas.addEventListener('click', event => {\n      if (!this.beginTime) return;\n\n      const rect = this.topCanvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n\n      const faceLen = this.cellLen * 1.5;\n      const faceX = this.canvasWidth / 2 - faceLen / 2;\n      const faceY = this.topCanvasHeight / 2 - faceLen / 2;\n\n      // 是否点击的圆脸区域\n      if (x > faceX && x < (faceX + faceLen) && y > faceY && y < (faceY + faceLen)) {\n        // 重置状态\n        this.reset();\n      }\n    });\n\n    topCanvas.addEventListener('contextmenu', event => {\n      event.preventDefault();\n    });\n\n    // 全部翻开或标记雷正确才会获胜\n    const tryWin = () => {\n      if (this.bomb || this.win) return;\n\n      for (let i = 0; i < this.lines; i++) {\n        for (let j = 0; j < this.rows; j++) {\n          if (this.cellStates[i][j] === CELL_STATE.HIDE && this.cells[i][j] !== -1) return;\n          if (this.cellStates[i][j] === CELL_STATE.FLAG && this.cells[i][j] !== -1) return;\n        }\n      }\n\n      this.win = true;\n      this.finishedAt = Date.now();\n\n      // 将未标记的雷再标记出来\n      for (let i = 0; i < this.lines; i++) {\n        for (let j = 0; j < this.rows; j++) {\n          if (this.cellStates[i][j] === CELL_STATE.HIDE && this.cells[i][j] === -1) {\n            this.cellStates[i][j] = CELL_STATE.FLAG;\n          }\n        }\n      }\n    };\n\n    // https://stackoverflow.com/questions/55677/how-do-i-get-the-coordinates-of-a-mouse-click-on-a-canvas-element\n    canvas.addEventListener('click', (event) => {\n      topStateFn();\n      if (this.bomb) return;\n      const [i, j] = this.getCellIndexFromEvent(event);\n      this.showCell(i, j);\n      tryWin();\n      this.draw();\n    });\n\n    canvas.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      topStateFn();\n      if (this.bomb) return;\n\n      const [i, j] = this.getCellIndexFromEvent(event);\n      if (this.cellStates[i][j] === CELL_STATE.SHOW) return;\n\n      if (this.cellStates[i][j] === CELL_STATE.FLAG) {\n        this.cellStates[i][j] = CELL_STATE.HIDE;\n        this.flags--;\n      } else {\n        this.cellStates[i][j] = CELL_STATE.FLAG;\n        this.flags++;\n      }\n      tryWin();\n      this.draw();\n    });\n  }\n\n  reset(resetting = true) {\n    if (resetting) this.resetting = Date.now();\n    this.win = false;\n    this.bomb = false;\n    this.flags = 0;\n    this.beginTime = 0;\n    this.finishedAt = 0;\n    this.initBombs();\n    this.drawTop();\n    this.draw();\n  }\n\n  drawTop() {\n    const ctx = this.topCtx;\n    ctx.clearRect(0, 0, this.canvasWidth, this.topCanvasHeight);\n\n    const faceLen = this.cellLen * 1.5;\n    const faceX = this.canvasWidth / 2 - faceLen / 2;\n    const faceY = this.topCanvasHeight / 2 - faceLen / 2;\n\n    if (this.resetting) {\n      if (this.beginTime) this.resetting = 0;\n      else if (Date.now() - this.resetting > 150) this.resetting = 0;\n    }\n\n    if (this.resetting) {\n      ctx.drawImage(this.facePressedBgImg, faceX, faceY, faceLen, faceLen);\n    } else if (this.win) {\n      ctx.drawImage(this.faceWinBgImg, faceX, faceY, faceLen, faceLen);\n    } else if (this.bomb) {\n      ctx.drawImage(this.faceLoseBgImg, faceX, faceY, faceLen, faceLen);\n    } else {\n      ctx.drawImage(this.faceUnpressedBgImg, faceX, faceY, faceLen, faceLen);\n    }\n\n    ctx.font = `bold ${this.cellLen * 1.5}px serif`;\n    ctx.fillStyle = 'red';\n    ctx.textBaseline = 'top';\n\n    const leftBombs = this.bombs - this.flags;\n    const leftText = String(leftBombs).padStart(3, '0');\n    ctx.fillText(leftText, this.cellLen / 2, this.topCanvasHeight / 2 - (this.cellLen * 1.5) / 2);\n\n    const seconds = this.beginTime === 0 ? 0 : Math.floor((Date.now() - this.beginTime) / 1000);\n    const rightText = String(seconds).padStart(3, '0');\n    const rightTextInfo = ctx.measureText(rightText);\n    ctx.fillText(rightText, this.canvasWidth - rightTextInfo.width - this.cellLen / 2, this.topCanvasHeight / 2 - (this.cellLen * 1.5) / 2);\n\n    const reDraw = (this.beginTime && !this.bomb && !this.win) || this.resetting;\n    if (reDraw) {\n      window.requestAnimationFrame(this.drawTop.bind(this));\n    }\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = '#808080';\n    for (let i = 1; i < this.lines; i++) {\n      ctx.moveTo(0, i * this.cellLen);\n      ctx.lineTo(this.canvasWidth, i * this.cellLen);\n    }\n    for (let i = 1; i < this.rows; i++) {\n      ctx.moveTo(i * this.cellLen, 0);\n      ctx.lineTo(i * this.cellLen, this.canvasHeight);\n    }\n    ctx.stroke();\n\n    ctx.font = `bold ${this.cellLen}px serif`;\n    ctx.textBaseline = 'top';\n    for (let i = 0; i < this.lines; i++) {\n      for (let j = 0; j < this.rows; j++) {\n        if (this.cells[i][j] > 0) {\n          if (this.cells[i][j] === 1) ctx.fillStyle = '#00f';\n          else if (this.cells[i][j] === 2) ctx.fillStyle = '#008001';\n          else if (this.cells[i][j] === 3) ctx.fillStyle = '#ff0000';\n          else if (this.cells[i][j] === 4) ctx.fillStyle = '#000080';\n          else if (this.cells[i][j] === 5) ctx.fillStyle = '#800001';\n          else ctx.fillStyle = '#800001';\n          const text = String(this.cells[i][j]);\n          const textInfo = ctx.measureText(text);\n          ctx.fillText(text, j * this.cellLen + (this.cellLen - textInfo.width) / 2, i * this.cellLen);\n        }\n      }\n    }\n\n    for (let i = 0; i < this.lines; i++) {\n      for (let j = 0; j < this.rows; j++) {\n        if (this.bomb && this.cells[i][j] === -1) {\n          if (this.cellStates[i][j] === CELL_STATE.SHOW) {\n            ctx.drawImage(this.mineRedBgImg, j * this.cellLen, i * this.cellLen, this.cellLen, this.cellLen);\n          } else if (this.cellStates[i][j] === CELL_STATE.HIDE) {\n            ctx.drawImage(this.mineBgImg, j * this.cellLen, i * this.cellLen, this.cellLen, this.cellLen);\n          } else {\n            ctx.drawImage(this.flagBgImg, j * this.cellLen, i * this.cellLen, this.cellLen, this.cellLen);\n          }\n          continue;\n        }\n\n        if (this.cellStates[i][j] === CELL_STATE.HIDE) {\n          ctx.drawImage(this.cellBgImg, j * this.cellLen, i * this.cellLen, this.cellLen, this.cellLen);\n        } else if (this.cellStates[i][j] === CELL_STATE.FLAG) {\n          if (this.bomb) {\n            ctx.drawImage(this.mineWrongBgImg, j * this.cellLen, i * this.cellLen, this.cellLen, this.cellLen);\n          } else {\n            ctx.drawImage(this.flagBgImg, j * this.cellLen, i * this.cellLen, this.cellLen, this.cellLen);\n          }\n        }\n      }\n    }\n  }\n\n  setCellValue(x: number, y: number) {\n    const cells = this.cells;\n    if (cells[x][y] === -1) return;\n    let num = 0;\n    [\n      [x - 1, y - 1],\n      [x - 1, y],\n      [x - 1, y + 1],\n      [x, y - 1],\n      [x, y + 1],\n      [x + 1, y - 1],\n      [x + 1, y],\n      [x + 1, y + 1]\n    ].forEach(([i, j]) => {\n      if ((cells[i] || [])[j] === -1) num++;\n    });\n    cells[x][y] = num;\n  }\n\n  showCell(x: number, y: number) {\n    const state = this.cellStates[x][y];\n    if (state === CELL_STATE.SHOW || state === CELL_STATE.FLAG) return;\n    if (this.cells[x][y] === -1) {\n      this.cellStates[x][y] = CELL_STATE.SHOW;\n      this.bomb = true;\n      this.finishedAt = Date.now();\n      return;\n    }\n\n    const showQueue: [number, number][] = [[x, y]];\n    while (showQueue.length) {\n      const [i, j] = showQueue.shift() as [number, number];\n      if (this.cellStates[i][j] === CELL_STATE.SHOW || this.cellStates[i][j] === CELL_STATE.FLAG) continue;\n      this.cellStates[i][j] = CELL_STATE.SHOW;\n      if (this.cells[i][j] !== 0) continue;\n      [\n        [i - 1, j - 1],\n        [i - 1, j],\n        [i - 1, j + 1],\n        [i, j - 1],\n        [i, j + 1],\n        [i + 1, j - 1],\n        [i + 1, j],\n        [i + 1, j + 1]\n      ].forEach(([ii, jj]) => {\n        if (ii >= 0 && jj >= 0 && ii < this.lines && jj < this.rows) {\n          showQueue.push([ii, jj]);\n        }\n      })\n    }\n  }\n\n  getCellIndexFromEvent(event: MouseEvent) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const i = Math.floor(y / this.cellLen);\n    const j = Math.floor(x / this.cellLen);\n    return [i, j];\n  }\n\n  setLevel(level: 1 | 2 | 3) {\n    if (level === this.state.level) return;\n    if (level === 1) {\n      this.lines = 9;\n      this.rows = 9;\n      this.bombs = 10;\n    } else if (level === 2) {\n      this.lines = 16;\n      this.rows = 16;\n      this.bombs = 40;\n    } else if (level === 3) {\n      this.lines = 16;\n      this.rows = 30;\n      this.bombs = 99;\n    }\n\n    this.canvasWidth = this.cellLen * this.rows;\n    this.canvasHeight = this.cellLen * this.lines;\n\n    this.setState({ level }, () => {\n      this.reset(false);\n    })\n  }\n\n  render() {\n    const { level } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p>扫雷</p>\n        <p>\n          <span onClick={() => { this.setLevel(1); }} style={{ marginRight: '20px', cursor: 'pointer' }} className={level === 1 ? 'level-selected' : undefined}>初级</span>\n          <span onClick={() => { this.setLevel(2); }} style={{ marginRight: '20px', cursor: 'pointer' }} className={level === 2 ? 'level-selected' : undefined}>中级</span>\n          <span onClick={() => { this.setLevel(3); }} style={{ cursor: 'pointer' }} className={level === 3 ? 'level-selected' : undefined}>高级</span>\n        </p>\n        <div>\n          <div\n            style={{\n              display: 'inline-block',\n              padding: '10px',\n              paddingBottom: 0,\n              background: '#c6c6c6'\n            }}\n          >\n            <canvas\n              ref={this.topCanvasRef}\n              style={{\n                border: '4px solid #808080',\n                borderRightColor: '#fff',\n                borderBottomColor: '#fff'\n              }}\n              width={this.canvasWidth}\n              height={this.topCanvasHeight}\n            ></canvas>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'inline-block',\n              padding: '10px',\n              background: '#c6c6c6'\n            }}\n          >\n            <canvas\n              ref={this.canvasRef}\n              style={{\n                border: '4px solid #808080',\n                borderRightColor: '#fff',\n                borderBottomColor: '#fff'\n              }}\n              width={this.canvasWidth}\n              height={this.canvasHeight}\n            ></canvas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/closed.184e8340.svg\";","export default __webpack_public_path__ + \"static/media/flag.4b1e382d.svg\";","export default __webpack_public_path__ + \"static/media/mine.24812854.svg\";","export default __webpack_public_path__ + \"static/media/mine_red.f7e40740.svg\";","export default __webpack_public_path__ + \"static/media/mine_wrong.e388c6ce.svg\";","export default __webpack_public_path__ + \"static/media/face_unpressed.0a00432f.svg\";","export default __webpack_public_path__ + \"static/media/face_pressed.3b633818.svg\";","export default __webpack_public_path__ + \"static/media/face_lose.b71d4bee.svg\";","export default __webpack_public_path__ + \"static/media/face_win.347d5c73.svg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}